#!/bin/bash

#
# Determine whether the BUCK file has any handmade modifications compared to
# what Reindeer would generate based on the Cargo.toml.
#

set -e

DOT="$(dirname "$0")"
# shellcheck source=fbcode/common/rust/tools/reindeer/script-common.sh
source "$DOT/script-common.sh"

eden_prefetch

for path in $THIRD_PARTY_PATHS; do
    echo "Checking $path..." >&2

    buckfile=
    if [ -e "$path/reindeer.toml" ]; then
        buckfile=$(sed -n 's/^file_name *= *"\([^"]*\)"$/\1/p' "$path/reindeer.toml")
    fi
    buckfile=${buckfile:-BUCK}

    replacement=$(mktemp)
    # shellcheck disable=SC2064 # command expands now rather than when signalled
    trap "rm -f $replacement" EXIT
    "$REINDEER" --third-party-dir "$path" buckify --stdout >"$replacement"

    if ! cmp --quiet "$path/$buckfile" "$replacement"; then
        jq \
            --null-input \
            --compact-output \
            --monochrome-output \
            --arg path "$path/$buckfile" \
            --rawfile original "$path/$buckfile" \
            --rawfile replacement "$replacement" \
        '{
            path: $path,
            line: 1,
            char: 1,
            code: "REINDEER",
            severity: "error",
            name: "buck-file-needs-to-be-regenerated",
            description: (
                "Run common/rust/tools/reindeer/buckify to regenerate.\n" +
                "\n" +
                "Refer to https://fburl.com/rust-third-party for documentation " +
                "on managing Rust third party dependencies."),
            original: $original,
            replacement: $replacement,
            bypassChangedLineFiltering: true,
        }'
    fi
done
